<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.system.blog.BlogCollectMapper">
    
    <resultMap type="BlogCollect" id="BlogCollectResult">
        <result property="collectId"    column="collect_id"    />
        <result property="collectUserId"    column="collect_user_id"    />
        <result property="articleId"    column="article_id"    />
        <result property="createUser"    column="create_user"    />
        <result property="createTime"    column="create_time"    />
        <result property="deleteFlag"    column="delete_flag"    />
    </resultMap>

    <sql id="selectBlogCollectVo">
        select collect_id, collect_user_id, article_id, create_user, create_time, delete_flag from blog_collect
    </sql>

    <select id="selectBlogCollectList" parameterType="BlogCollect" resultMap="BlogCollectResult">
        <include refid="selectBlogCollectVo"/>
        <where>  
            <if test="collectUserId != null "> and collect_user_id = #{collectUserId}</if>
            <if test="articleId != null "> and article_id = #{articleId}</if>
            <if test="createUser != null  and createUser != ''"> and create_user = #{createUser}</if>
            <if test="deleteFlag != null  and deleteFlag != ''"> and delete_flag = #{deleteFlag}</if>
        </where>
    </select>
    
    <select id="selectBlogCollectById" parameterType="Long" resultMap="BlogCollectResult">
        <include refid="selectBlogCollectVo"/>
        where collect_id = #{collectId}
    </select>
        
    <insert id="insertBlogCollect" parameterType="BlogCollect">
        insert into blog_collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collectId != null">collect_id,</if>
            <if test="collectUserId != null">collect_user_id,</if>
            <if test="articleId != null">article_id,</if>
            <if test="createUser != null and createUser != ''">create_user,</if>
            <if test="createTime != null">create_time,</if>
            <if test="deleteFlag != null and deleteFlag != ''">delete_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collectId != null">#{collectId},</if>
            <if test="collectUserId != null">#{collectUserId},</if>
            <if test="articleId != null">#{articleId},</if>
            <if test="createUser != null and createUser != ''">#{createUser},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="deleteFlag != null and deleteFlag != ''">#{deleteFlag},</if>
         </trim>
    </insert>

    <update id="updateBlogCollect" parameterType="BlogCollect">
        update blog_collect
        <trim prefix="SET" suffixOverrides=",">
            <if test="collectUserId != null">collect_user_id = #{collectUserId},</if>
            <if test="articleId != null">article_id = #{articleId},</if>
            <if test="createUser != null and createUser != ''">create_user = #{createUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="deleteFlag != null and deleteFlag != ''">delete_flag = #{deleteFlag},</if>
        </trim>
        where collect_id = #{collectId}
    </update>

    <delete id="deleteBlogCollectById" parameterType="Long">
        delete from blog_collect where collect_id = #{collectId}
    </delete>

    <delete id="deleteBlogCollectByIds" parameterType="String">
        delete from blog_collect where collect_id in 
        <foreach item="collectId" collection="array" open="(" separator="," close=")">
            #{collectId}
        </foreach>
    </delete>

</mapper>